AWSTemplateFormatVersion: 2010-09-09

Description: |
  This template create SecGroup,LaunchTemplate,ALB,Listener,Autoscaling,Autoscalpolicy
Parameters:
  
  VPC:
    Description: Select a vpc
    Type: AWS::EC2::VPC::Id
  
  MySubnet:
    Description: Select a subnet
    Type: List<AWS::EC2::Subnet::Id>

  MyKeyName:
    Description: This is for keypair
    Type: AWS::EC2::KeyPair::KeyName
    Default: usa_key
  
  MyInstanceType:
    Description: Select a instance type
    Type: String
    Default: t2.micro
    AllowedValues:
         - t3.micro
         - t2.micro
         - t2.nano
  
  MyImageId:
    Description: This is for ami
    Type: AWS::EC2::Image::Id
    Default: ami-022e1a32d3f742bd8

    
Resources:
  
  MyASGPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref MyASG
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
            PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0

  
  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: myautoscaling
      DesiredCapacity: 2
      HealthCheckGracePeriod: 200
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: 1
      MaxSize: 3 

      MinSize: 1
      TargetGroupARNs: 
        - !Ref MyTargetGroup
      VPCZoneIdentifier: !Ref MySubnet
  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref MyTargetGroup
          Type: forward
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP
  
  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: myloadbalancer
      SecurityGroups: 
        - !Ref MySecGroup
      Subnets: !Ref MySubnet
      Tags: 
        - Key: Name
          Value: LoadBalancer
  
  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Tags: 
        - Key: Name
          Value: MyTargetGroup
      TargetType: instance
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPC
  
  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref MyImageId
        InstanceType: !Ref MyInstanceType
        KeyName: !Ref MyKeyName
        SecurityGroupIds:
          - !GetAtt MySecGroup.GroupId
        UserData: !Base64 |
          #!/bin/bash
          #update os
          yum update -y
          #install apache server
          yum install -y httpd
          # get private ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          # get public ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          # get date and time of server
          DATE_TIME=`date`
          # set all permissions
          chmod -R 777 /var/www/html
          # create a custom index.html file
          echo "<html>
              <head>
              <title> Application Load Balancer</title>
              </head>
              <body>
                  <h1>Testing Application Load Balancer</h1>
                  <h2>Congratulations! You have created an instance from Launch Template</h2>
                  <h3>This web server is launched from the launch template by Osvaldo via CFN</h3>
                  <p>This instance is created at <b>$DATE_TIME</b></p>
                  <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                  <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
              </body>
              </html>" > /var/www/html/index.html
              # start apache server
              systemctl start httpd
              systemctl enable httpd
          systemctl enable httpd
  
  MySecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: This security groups include ssh,http # Required
      GroupName: my-sec-group 
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0   
      Tags: 
        - Key: Name
          Value: MySecgroup
      VpcId: !Ref VPC
  
Outputs:
  DNSName:
    Description: This is my dns name
    Value: !Join 
    - ''
    - - 'http://'
      - !GetAtt MyLoadBalancer.DNSName
